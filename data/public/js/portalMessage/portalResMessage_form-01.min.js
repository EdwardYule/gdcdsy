$define(["wgt_util", "jquery.formValidate", "md5", "jquery.message", "laydate"], function(w, e, t, a, i, n, r) {
    var T = !1,
        I = function(t, a, e, i, n, r, s) {
            var o = {};
            o.request_url = e, o.url_param = i, o.requst_type = n || "GET";
            var d = encodeURIComponent(encodeURIComponent(JSON.stringify(o))),
                c = w.md5Sign(JSON.stringify(o));
            w.ajax({
                type: "POST",
                url: "/comp/portalRouter",
                async: s || s === undefined,
                data: {
                    param: d,
                    sign: c
                },
                success: function(e) {
                    r(e, t, a)
                },
                error: function() {
                    getFailPop(t, "操作失败！")
                }
            })
        };
    return {
        init: function() {
            var m = this._params,
                h = $compCl.getScope(m.id),
                v = (m.CorrectRequired && m.CorrectRequired, m.DataFailed && m.DataFailed, !0),
                g = !0,
                s = "",
                i = '<div class="e_LoginPrompt p_LoginPrompt corlor_warning" data-ename="表单错误提示语"><i class="iconfont icon-error"></i><span class="text-error color_error">手机号码不能为空或格式不正确！</span></div>',
                _ = !1;

            function x(e, t) {
                t.removeClass("success").addClass("error"), t.find(".p_LoginPrompt").remove().end().append(i), t.find(".text-error").text(e.attr("data-error")), e.data("status", 0)
            }

            function y(e, t, a) {
                if (t.removeClass("success").addClass("error"), t.find(".p_LoginPrompt").remove().end().append(i), t.find(".text-error").text(a), "" != t.find(".text-error").text(a)) return s = a;
                e.data("status", 0)
            }
            var b = function(e, t) {
                return t.removeClass("error").addClass("success"), t.find(".p_LoginPrompt").remove().end().append(i), t.find(".text-error").text(""), s = ""
            };

            function o(i, e) {
                var t = i.val(),
                    n = i.parent(),
                    a = i.attr("name"),
                    r = i.attr("data-type"),
                    s = i.attr("data-subType"),
                    o = (t.length, /^[1-9]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$/),
                    d = i.attr("tit"),
                    c = !1;
                if (e && (t = e), i.attr("data-required") && "true" != i.attr("data-required") ? t && "" != t.trim() ? c = !0 : (function l(e, t) {
                        t.removeClass("error success"), t.find(".p_LoginPrompt").remove()
                    }(0, n), v = !1) : t && "" != t.trim() ? c = !0 : ("en" == window.tenant.language ? y(i, n, d + " " + m.mp) : y(i, n, d + m.mp), v = !1), c) {
                    if (b(i, n), 1 == r && (2 == s ? /^[0-9]*$/.test(t) ? b(i, n) : (y(i, n, m.number), v = !1) : 3 == s ? (window.tenant.foreign ? new RegExp : /^1[0-9]{10}$/).test(t) ? b(i, n) : (y(i, n, m.correct + d + m.hm), v = !1) : 4 == s ? /^[0-9-()（）]{7,18}$/g.test(t) ? b(i, n) : (y(i, n, m.correct + d + m.hm), v = !1) : 5 == s ? /(^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$)/g.test(t) ? b(i, n) : (y(i, n, m.correctG + d), v = !1) : 6 == s ? o.test(t) || "" != t ? b(i, n) : (y(i, n, m.correctG + d), v = !1) : 7 == s && (o.test(t) || "" != t ? b(i, n) : (y(i, n, m.correctG + d), v = !1))), 5e3 != i.attr("maxlength") && "多行文本输入框" != i.parent().data("name") || (-1 < t.indexOf("<script>") && -1 < t.indexOf("<\/script>") ? (y(i, n, m.correct + d), v = !1) : b(i, n)), "captchas" == a) {
                        var p = "/interactionApi/captcha/checkCaptcha",
                            f = {
                                captchaId: h.find(".p_image img").attr("data-id"),
                                code: t
                            };
                        I(h, m, p, {
                            formData: f
                        }, "GET", function(e) {
                            if (!e.data || "" === e.data) return x(i, n), void(v = !1);
                            var t = JSON.parse(e.data);
                            if ("101" == (t = JSON.parse(e.data)).status) {
                                var a = "1" == t.data.code;
                                a ? (_ = !0, b(i, n)) : (_ = v = !1, x(i, n))
                            } else x(i, n), v = !1
                        }, !1)
                    }
                    if ("phoneCode" == a || "mailCode" == a) {
                        p = "/interactionApi/member/account/checkVerifyCode";
                        var u = "";
                        u = "phoneCode" == a ? i.parents(".p_aaa").find(".p_PhoneBox input").val() : i.parents(".p_aaa").find(".p_EmailBox input").val(), f = {
                            compType: m.id,
                            verifyName: u,
                            verifyType: "SMS",
                            verifyValue: t
                        }, "mailCode" == a && (f.verifyType = "EMAIL"), I(h, m, p, f, "GET", function(e) {
                            if (!e.data || "" === e.data) return x(i, n), void(g = v = !1);
                            var t = JSON.parse(e.data);
                            "101" == t.status ? "2000" == t.data.status ? (b(i, n), g = !0) : (g = v = !1, x(i, n)) : (x(i, n), v = !1)
                        })
                    }
                }
                return T = !1, v
            }
            var e = function(i, e) {
                var t = {
                    compId: e.id
                };
                I(i, e, "/interactionApi/captcha/getCaptcha", t, "CET", function n(e) {
                    if (e.data && "" !== e.data) {
                        var t = JSON.parse(e.data);
                        if ("101" == t.status) {
                            var a = i.find(".p_image img");
                            a.attr("src", t.data.imgSrc), a.attr("data-id", t.data.captchaId)
                        }
                    }
                })
            };
            e(h, m);
            var t = h.find(".p_image");
            t.off("click"), t.on("click", function() {
                    e(h, m)
                }),
                function d(e, t) {
                    e.find(".p_date").each(function() {
                        var e = "#" + w(this).attr("id"),
                            t = w(this);
                        laydate.render({
                            elem: e,
                            done: function(e) {
                                o(t, e)
                            }
                        })
                    }), e.find(".p_dateTime").each(function() {
                        var e = "";
                        e = w(this).attr("id") != undefined ? "#" + w(this).attr("id") : "#" + w(this).find(".InputText").attr("id");
                        var t = w(this);
                        laydate.render({
                            elem: e,
                            type: "datetime",
                            done: function(e) {
                                o(t, e)
                            }
                        })
                    })
                }(h), h.find(".e_box .e_droplist").off("click").on("click", ["li", "input", ".shape"], function(e) {
                    e.stopPropagation(), window.e = e;
                    var t = w(this).closest(".p_selectC"),
                        a = (w(this), w(this).closest(".e_box")),
                        i = a.find(".e_droplist"),
                        n = a.find(".shape"),
                        r = i.find(".itembox"),
                        s = e.target.tagName.toLowerCase(),
                        o = function() {
                            n.removeClass("clicked"), r.addClass("item_hide"), a.css({
                                overflow: "hidden"
                            }), i.removeClass("hover"), w(document).off("click")
                        };
                    if ("input" === s || w(e.target).hasClass("shape")) return e.stopPropagation(), n.hasClass("clicked") ? o() : (n.addClass("clicked"), r.removeClass("item_hide"), a.css({
                        overflow: "visible"
                    }), i.addClass("hover"), w(document).on("click", o)), !1;
                    var d = w(e.target).closest("li"),
                        c = d.text().trim(),
                        p = d.attr("idx");
                    i.find("input").val(c), a.find("input.d_select").val(p).data("status", 1), t.removeClass("error").addClass("success"), o()
                }), h.find(".e_box").off("click").on("click", ".e_checkbox", function(e) {
                    var t = w(this).closest(".e_box");
                    0 < t.find("input[type='checkbox']:checked").length ? t.find("input").data("status", 1) : t.find("input").data("status", 0)
                }), h.on("blur", ".InputText:visible", function() {
                    o(w(this))
                }), h.find("input[type='radio']").data("status", 1);
            var r, a, n;
            a = m, (n = (r = h).find(".p_sendBtn")).off("click"), n.each(function() {
                w(this).on("click", function() {
                    var n = w(this),
                        e = "";
                    e = w(this).hasClass("mailBtn") ? w(this).parent().parents(".p_aaa").find(".p_EmailBox") : w(this).parent().parents(".p_aaa").find(".p_PhoneBox");
                    var t = {
                        compType: a.id,
                        verifyType: "SMS",
                        verifyName: e.find("input").val()
                    };
                    return w(this).hasClass("mailBtn") && (t.verifyType = "EMAIL"), (!e.find(".corlor_warning .color_error") || "" == e.find(".corlor_warning .color_error").text()) && ("" == e.find("input").val() ? (e.find("input").trigger("blur"), !1) : void I(r, a, "/interactionApi/member/account/sendVerify", t, "GET", function(e) {
                        if (e.data && "" !== e.data) {
                            var t = JSON.parse(e.data);
                            if ("101" == t.status) {
                                r.find(".p_sendBtn").css("display", "none");
                                var a = 60;
                                n.attr("disabled", !0), n.parent().next().removeClass("item_hide"), n.removeAttr("disabled"), r.find(".p_sendTimerBox").css("display", "inline-block !important");
                                var i = setInterval(function() {
                                    n.parent().next().find("span").text(--a), a < 0 && (r.find(".p_sendBtn").css("display", "block"), r.find(".p_sendTimerBox").css("display", "none !important"), a = 60, n.removeAttr("disabled"), n.parent().next().addClass("item_hide"), n.parent().next().find("span").text(a), clearInterval(i))
                                }, 1e3)
                            } else y(n.parent(), n.parent().prev(), t.msg)
                        }
                    }))
                })
            });
            var c = function(e, t, a) {
                    if (T = !1, !(0 < t.find("input[name=captchas]").length) || t.find("input[name=captchas]").val())
                        if (e.data && "" !== e.data) {
                            var i = JSON.parse(e.data);
                            if ("101" == i.status) {
                                var n = i.data;
                                "1" == n.code ? (w.message({
                                    type: "success",
                                    msg: a.success
                                }), setTimeout(function() {
                                    var e = a.submitUrl,
                                        t = a.submitTarget;
                                    "" == e ? window.location.reload() : "_blank" == t ? window.open(e) : window.location.href = e
                                }, 500), C = !1) : "-3" == n.code ? w.message({
                                    type: "error",
                                    msg: function r() {
                                        var e = "";
                                        switch (tenant.language) {
                                            case "zh_CN":
                                                e = "为避免相同数据重复提交，建议您一分钟后再试。";
                                                break;
                                            case "zh_HN":
                                                e = "為避免相同數據重複提交，建議您一分鐘後再試。";
                                                break;
                                            case "de":
                                                e = "Um die gleichen Daten nicht zu wiederholen, empfiehlt es sich, in einer Minute erneut zu versuchen.";
                                                break;
                                            case "en":
                                                e = "To avoid duplicate submission of the same data, it is recommended that you try again in a minute.";
                                                break;
                                            case "es":
                                                e = "Para evitar la repetición de los mismos datos, se recomienda intentarlo en un minuto.";
                                                break;
                                            case "fr":
                                                e = "Pour éviter la répétition des mêmes données, il est recommandé que vous réessayez dans cinq minutes.";
                                                break;
                                            case "ja":
                                                e = "同じデータが重複しないように、1分後に再試行することをおすすめします。";
                                                break;
                                            case "ko":
                                                e = "같은 데이터가 반복되는 것을 피하기 위해서 1분 후에 다시 시도할 것을 건의합니다.";
                                                break;
                                            case "pt":
                                                e = "Para evitar a submissão duplicada DOS mesmos dados, recomenda-se que você tente novamente EM um minuto.";
                                                break;
                                            case "ru":
                                                e = " во избежание повторения одних и тех же данных рекомендуется попробовать через минуту."
                                        }
                                        return e
                                    }()
                                }) : w.message({
                                    type: "error",
                                    msg: a.submitError
                                })
                            } else w.message({
                                type: "error",
                                msg: a.submitError
                            })
                        } else w.message({
                            type: "error",
                            msg: a.submitError
                        })
                },
                p = !0,
                f = !0,
                u = !0,
                l = !0,
                C = !0,
                k = !0;
            h.off("click", ".p_submit"), h.on("click", ".p_submit", function() {
                if (!T) {
                    var e = !(T = !0);
                    if (h.find(".p_LoginPrompt").each(function() {
                            "" !== w(this).find(".color_error").text() && (e = !0, -1 < w(this).parent().attr("class").indexOf("success") && w(this).parent().removeClass("success").addClass("error"), w(this).parents(".p_SectorBox").css({
                                overflow: "visible"
                            }))
                        }), e) return;
                    if (t = "/comp/touch/cfrs", a = {}, i = "GET", r = function(e) {
                            k = 200 == e.code
                        }, w.ajax({
                            type: i,
                            url: t,
                            dataType: "json",
                            async: !1,
                            data: a,
                            success: function(e) {
                                r(e)
                            },
                            error: function(e) {}
                        }), !C) return !1;
                    var d = {},
                        n = {
                            compId: m.id
                        };
                    h.find(".p_itemBox").length, h.find(".InputText:visible").each(function() {
                        var e = w(this).parent(),
                            t = w(this).attr("name");
                        if (t) {
                            var a = w(this).attr("tit"),
                                i = w(this).val();
                            if (n[t] = i, "true" == w(this).attr("data-required")) {
                                if ("" != s) return f = !(p = !1), p;
                                if ("" == i) return d[t] = w(this).data("status"), y(w(this), e, a + m.mp), f = !(p = !1), p;
                                d[t] = i, o(w(this)), f = p = !0
                            } else "" != i && (d[t] = i, o(w(this))), f = p = !0
                        }
                    }), h.find(".p_SectorBox").each(function() {
                        var n = w(this).find(".d_select").attr("data-required"),
                            r = w(this).find(".p_selectC"),
                            s = w(this).find(".d_select").attr("tit"),
                            o = w(this).find("select.InputText");
                        o.each(function() {
                            var e = w(this),
                                t = w(this).find("option"),
                                a = w(this).parent().prev().attr("name"),
                                i = !1;
                            t.each(function() {
                                e.val() == w.trim(w(t).eq(0).val()) && (i = !0)
                            }), i ? "true" == n && (y(w(this), r, s + m.mp), w(this).parents(".p_SectorBox").css({
                                overflow: "visible"
                            }), f = !1) : (d[a] = o.map(function() {
                                return w(this).val()
                            }).get().join(","), f = !0)
                        })
                    }), h.find(".p_GenderBox").each(function() {
                        var t = w(this).find("input[type='radio']:checked");
                        u && 0 == t.length ? u = "false" == h.find(".p_GenderBox input").attr("data-required") || (w.message({
                            msg: m.CorrectRequired,
                            type: "error"
                        }), !1) : w(this).find("input[type='radio']").each(function() {
                            var e = w(this).attr("name");
                            w(this).prop("checked") && (d[e] = t.map(function() {
                                return w(this).val()
                            }).get().join(","), 0 == t.length ? radioFlag2 = !1 : radioFlag2 = !0)
                        })
                    }), h.find(".p_checkboxContainerBox").each(function() {
                        var t = w(this).find("input[type='checkbox']:checked");
                        p && 0 == t.length ? l = "false" == h.find(".p_checkboxContainerBox input").attr("data-required") || (w.message({
                            msg: m.CorrectRequired,
                            type: "error"
                        }), !1) : w(this).find("input[type='checkbox']").each(function() {
                            var e = w(this).attr("name");
                            w(this).prop("checked") && (d[e] = t.map(function() {
                                return w(this).val()
                            }).get().join(","), l = !0)
                        })
                    }), d.selectId = m.selectId, h.find("input[type='radio']").each(function() {
                        var e = w(this).attr("name");
                        d[e] = h.find("input:radio[name=" + e + "]:checked").val()
                    }), d.messageId = h.find("#categoryId").val(), d.captchas = h.find("input[name=captchas]").val(), d.captchaId = h.find(".p_image img").attr("data-id"), d.realIP = "", d.refererUrl = window.location.pathname + window.location.search, 0 != h.find("input[name=captchas]").length || d.captchas != undefined && "undefined" != d.captchas || (_ = !0), h.find(".InputText").each(function() {
                        var e = w(this);
                        "phoneCode" != e.attr("name") && "mailCode" != e.attr("name") || o(e)
                    }), 0 == [].length && p && f && u && l && _ && g && k && (h.find(".p_LoginPrompt").remove(), I(h, m, "/interactionApi/message/add", {
                        formData: d
                    }, "POST", c, !1))
                }
                var t, a, i, r
            })
        }
    }
});