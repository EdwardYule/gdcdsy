$define([], function($) {
    var init = function() {
        var Pagination = {
            uri: "",
            pageSize: 10,
            currentPage: 1,
            totalPages: 0,
            initUri: function(n) {
                this.uri = n
            },
            initPagination: function(n, i, a, e) {
                null != i && i == a && 1 == i ? e.find(".p_page").hide() : e.find(".p_page").show(), null != i && i != a && 1 == i ? e.find(".p_page").children(".pre").addClass("pre1") : e.find(".p_page").children(".pre").removeClass("pre1"), this.pageSize = null == n || "undefined" == n ? 10 : n, this.currentPage = null == i || "undefined" == i ? 1 : i, this.totalPages = null == a || "undefined" == a ? 0 : a, null != i && 1 != i && i == a ? e.find(".p_page").children(".next").addClass("next1") : e.find(".p_page").children(".next").removeClass("next1")
            },
            next: function(n, i, a, e, t, r) {
                this.filter({
                    moudleReg: "companyplace/",
                    callBacK: function(n, i) {
                        i.uri = n
                    }
                }, this, r);
                var o = this.uri,
                    s = parseInt(n) + 1;
                i < s && (s = i), o = compositeUrl(o, a, s, r), this.hashChange(s, e), "function" == typeof t || "string" == typeof t ? (invokeCallback(t, o, r), Pagination.currentPage = s, $(window).scrollTop($("#c_" + e).offset().top)) : (asyncSubmit(o, "POST", e, r), Pagination.currentPage = s)
            },
            pre: function(n, i, a, e, t, r) {
                this.filter({
                    moudleReg: "companyplace/",
                    callBacK: function(n, i) {
                        i.uri = n
                    }
                }, this, r);
                var o = this.uri,
                    s = n - 1;
                s <= 0 && (s = 1), o = compositeUrl(o, a, s, r), this.hashChange(s, e), "function" == typeof t || "string" == typeof t ? (invokeCallback(t, o, r), Pagination.currentPage = s, $(window).scrollTop($("#c_" + e).offset().top)) : (asyncSubmit(o, "POST", e, r), Pagination.currentPage = s)
            },
            jump: function(n, i, a, e, t) {
                this.filter({
                    moudleReg: "companyplace/",
                    callBacK: function(n, i) {
                        i.uri = n
                    }
                }, this, t);
                var r = compositeUrl(this.uri, i, n, t);
                this.hashChange(parseInt(n), a), "function" == typeof e || "string" == typeof e ? (invokeCallback(e, r, t), Pagination.currentPage = parseInt(n), $(window).scrollTop($("#c_" + a).offset().top)) : (asyncSubmit(r, "POST", a, t), Pagination.currentPage = parseInt(n))
            },
            ajax: function() {
                var n = compositeUrl(this.uri, this.pageSize, this.currentPage, this.params);
                asyncSubmit(n, "POST", this.divid, this.params)
            },
            filter: function(n, i, a) {
                a.params && a.params.url && -1 != a.params.url.indexOf(n.moudleReg) && n.callBacK(a.params.url, i)
            },
            hashChange: function(n, i) {
                if (!Pagination.isHashChange) {
                    Pagination.isPopstateChange = !0;
                    var a = location.hash.split("#");
                    if (-1 == location.hash.indexOf("#c_" + i)) location.hash = location.hash + "#c_" + i + "-" + n;
                    else {
                        for (var e = 0; e < a.length; e++) - 1 != a[e].indexOf("c_" + i) && (a[e] = "c_" + i + "-" + n);
                        location.hash = a.join("#")
                    }
                    Pagination.isPopstateChange = !1
                }
            }
        };
        invokeCallback = function(n, i, a) {
            invokeInner(n, i, a)
        }, invokeInner = function(callback, url, params) {
            var isFun = !0;
            if ("function" == typeof callback ? isFun = !0 : "string" == typeof callback && (isFun = !1), isFun) callback(url, params);
            else {
                var strobj = JSON.stringify(params);
                eval(callback + "('" + url + "',(" + strobj + "))")
            }
        }, compositeUrl = function(n, i, a, e) {
            return e.keymapping ? n.indexOf("?") <= 0 ? n + "?" + e.keymapping.pageSize + "=" + i + "&" + e.keymapping.currentPage + "=" + a : n + "&" + e.keymapping.pageSize + "=" + i + "&" + e.keymapping.currentPage + "=" + a : n.indexOf("?") <= 0 ? n + "?pageSize=" + i + "&currentPage=" + a : n + "&pageSize=" + i + "&currentPage=" + a
        };
        var getPClass = function(n) {
            for (var i = n.className.split(" "), a = 0; a < i.length; a++)
                if ("p_" == i[a].substring(0, 2)) return i[a]
        };
        return refreshDom = function(n, i, a) {
            var e, t = "c_" + i;
            if (a.contentObj) {
                var r = getPClass(a.contentObj.get(0)),
                    o = $("<div>").html(n);
                e = o.find("." + r).children(), a.noJs || (e = e.add(o.find("script"))), a.contentObj.html(e)
            } else $("#" + t).html(), $("#" + t).html(n);
            return $(window).scrollTop($("#" + t).offset().top), e
        }, asyncSubmit = function(n, i, a, e) {
            $.ajax({
                url: n,
                type: i,
                data: e.data,
                beforeSend: function(n) {},
                error: function(n, i, a) {},
                success: function(n) {
                    var i = refreshDom(n, a, e);
                    e.successFun && e.successFun(i)
                }
            })
        }, Pagination
    };
    return {
        init: init
    }
});